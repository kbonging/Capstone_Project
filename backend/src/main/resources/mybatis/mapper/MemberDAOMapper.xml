<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.webcore.platform.member.dao.MemberDAO">
    <!--MemberResultMap-->
    <resultMap id="MemberResultMap" type="com.webcore.platform.member.dto.MemberDTO" >
        <id property="memberIdx" column="member_idx"/>
        <result property="memberId" column="member_id"/>
        <result property="memberName" column="member_name"/>
        <result property="memberEmail" column="member_email"/>
        <result property="memberPhone" column="member_phone"/>
        <result property="profileImgUrl" column="profile_image"/>
        <result property="intro" column=""/>
        <result property="heartCount" column=""/>
        <result property="penalty" column=""/>
        <result property="delYn" column="DEL_YN"/>
        <!--권한 목록-->
        <collection property="authDTOList" ofType="com.webcore.platform.member.dto.MemberAuthDTO">
            <result property="authIdx" column="auth_idx"/>
            <result property="auth" column="auth"/>
        </collection>
    </resultMap>

    <!--로그인 resultMap-->
    <resultMap id="loginResultMap" type="com.webcore.platform.member.dto.MemberDTO" >
        <id property="memberIdx" column="member_idx"/>
        <result property="memberId" column="member_id"/>
        <result property="memberPwd" column="member_pwd"/>
        <result property="memberName" column="member_name"/>
        <!--DefaultDTO 목록-->
        <result property="delYn" column="DEL_YN"/>

        <!--권한 목록-->
        <collection property="authDTOList" ofType="com.webcore.platform.member.dto.MemberAuthDTO">
            <result property="authIdx" column="auth_idx"/>
            <result property="auth" column="auth"/>
        </collection>
    </resultMap>

    <!-- 로그인 시 정보 조회-->
    <select id="selectLoginMemberById" parameterType="String" resultMap="loginResultMap">
        SELECT  M.member_idx, M.member_id, M.member_pwd, M.member_name, M.del_yn, A.auth_idx, A.auth
        FROM TB_MEMBER M LEFT JOIN TB_MEMBER_AUTH A
        ON M.member_idx = A.member_idx
        WHERE M.member_id = #{memberId} AND M.del_yn = 'N';
    </select>

    <!--회원 고유 번호로 회원 정보 조회-->
    <select id="selectMemberByIdx" parameterType="java.lang.Integer" resultMap="MemberResultMap">
        select mb.member_idx, mb.member_id, mb.member_name, au.auth , member_email, profile_img_url, intro, heart_count, penalty, mb.del_yn
        FROM tb_member mb JOIN tb_member_auth au
        ON mb.member_idx = au.member_idx
        WHERE mb.member_idx=#{memberIdx} AND mb.del_yn='N';
    </select>

    <!-- 회원 고유 번호로 권한 조회 -->
    <select id="selectAuthListByMemberIdx" parameterType="int" resultType="com.webcore.platform.member.dto.MemberAuthDTO">
        SELECT auth_idx, member_idx, auth
        FROM tb_member_auth
        WHERE member_idx = #{memberIdx}
    </select>

    <!-- 공통 회원 정보 등록 -->
    <insert id="insertMember" parameterType="com.webcore.platform.member.dto.MemberDTO"
            useGeneratedKeys="true" keyProperty="memberIdx">
        INSERT INTO TB_MEMBER (MEMBER_ID, MEMBER_PWD, MEMBER_NAME, MEMBER_EMAIL, MEMBER_PHONE, REG_DATE)
        VALUES (#{memberId}, #{memberPwd}, #{memberName}, #{memberEmail}, #{memberPhone}, NOW());
    </insert>

    <!-- 회원 권한 등록 -->
    <insert id="insertMemberAuth" parameterType="com.webcore.platform.member.dto.MemberAuthDTO"
            useGeneratedKeys="true" keyProperty="authIdx">
        INSERT INTO TB_MEMBER_AUTH( MEMBER_IDX, AUTH ) values( #{memberIdx}, #{auth} );
    </insert>

    <!--아이디 중복 체크-->
    <select id="countByMemberId" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM TB_MEMBER WHERE member_id = #{memberId};
    </select>

    <!--이메일 중복 체크-->
    <select id="countByMemberEmail" parameterType="String" resultType="int">
        SELECT count(*) from tb_member where member_email = #{memberEmail};
    </select>

    <!-- 공통 회원 정보 수정 -->
    <update id="updateMember" parameterType="com.webcore.platform.member.dto.MemberUpdateDTO">
        UPDATE tb_member
        SET MEMBER_PHONE = #{memberPhone},
        INTRO = #{intro},
        MEMBER_EMAIL = #{memberEmail},
        MOD_DATE = NOW()
        WHERE MEMBER_IDX = #{memberIdx}
    </update>

</mapper>
