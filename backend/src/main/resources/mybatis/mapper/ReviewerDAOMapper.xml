<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.webcore.platform.reviewer.dao.ReviewerDAO">

    <!--리뷰어 정보 ResultMap-->
    <resultMap id="memberWithReviewerResultMap" type="com.webcore.platform.reviewer.dto.ReviewerDTO">
        <!-- TB_MEMBER -->
        <id property="memberIdx" column="member_idx" />
        <result property="memberId" column="member_id" />
        <result property="memberName" column="member_name" />
        <result property="memberEmail" column="member_email" />
        <result property="memberPhone" column="member_phone" />
        <result property="profileImgUrl" column="profile_img_url" />
        <result property="intro" column="intro" />
        <result property="heartCount" column="heart_count" />
        <result property="penalty" column="penalty" />
        <result property="delYn" column="del_yn" />
        <result property="regDate" column="reg_date" />

        <!-- Reviewer 전용 필드 -->
        <result property="nickname" column="nickname" />
        <result property="gender" column="gender" />
        <result property="birthDate" column="birth_date" />
        <result property="activityArea" column="activity_area" />
        <result property="activityTopic" column="activity_topic" />
        <result property="zipCode" column="zip_code" />
        <result property="address" column="address" />
        <result property="detailAddress" column="detail_address" />

        <!--Reviewer 채널 리스트-->
        <collection property="reviewerChannelList" ofType="com.webcore.platform.reviewer.dto.ReviewerChannelDTO">
            <result property="infTypeCodeId" column="inf_type_code_id"/>
            <result property="channelUrl" column="channel_url"/>
        </collection>

        <!-- auth 리스트 -->
        <collection property="authDTOList" ofType="com.webcore.platform.member.dto.MemberAuthDTO">
            <result property="auth" column="auth" />
        </collection>
    </resultMap>

    <!-- 리뷰어 프로필 등록 -->
    <insert id="insertReviewerProfile">
        INSERT INTO TB_REVIEWER_PROFILE (MEMBER_IDX, NICKNAME, GENDER, BIRTH_DATE, ACTIVITY_AREA, ACTIVITY_TOPIC, ZIP_CODE, ADDRESS, DETAIL_ADDRESS)
        VALUES (
            #{memberIdx}, #{nickname}, #{gender}, #{birthDate},
            #{activityArea}, #{activityTopic}, #{zipCode}, #{address}, #{detailAddress}
        );
    </insert>

    <!-- 리뷰어 채널 등록 -->
    <insert id="insertReviewerChannel">
        INSERT INTO TB_REVIEWER_CHANNEL (MEMBER_IDX, INF_TYPE_CODE_ID, CHANNEL_URL, REG_DATE)
        VALUES (#{memberIdx}, #{infTypeCodeId}, #{channelUrl}, NOW());
    </insert>

    <!--(리뷰어)회원 고유 번호로 회원 정보 조회-->
    <select id="selectReviewerByIdx" parameterType="java.lang.Integer" resultMap="memberWithReviewerResultMap">
        select mb.member_idx, mb.member_id, mb.member_name, mb.member_email, mb.member_phone, mb.profile_img_url, mb.intro, mb.heart_count, mb.penalty, mb.del_yn, mb.reg_date, au.auth,
            rp.NICKNAME, rp.GENDER, rp.BIRTH_DATE, rp.ACTIVITY_AREA, rp.ACTIVITY_TOPIC, rp.ZIP_CODE, rp.ADDRESS, rp.DETAIL_ADDRESS,
            rc.CHANNEL_URL, rc.INF_TYPE_CODE_ID
        FROM tb_member mb JOIN tb_member_auth au
        ON mb.member_idx = au.member_idx
        JOIN tb_reviewer_profile rp
        ON mb.member_idx = rp.member_idx
        JOIN tb_reviewer_channel rc
        ON mb.member_idx = rc.member_idx
        where mb.member_idx=#{memberIdx};
    </select>


    <!-- 리뷰어 기준: '내가 당첨(CAMAPP_APPROVED)' && '발표일 지난 시점부터 노출' -->
    <resultMap id="runningCampaignResultMap" type="com.webcore.platform.reviewer.dto.ReviewerRunningCampaignDTO">
        <id property="applicationIdx" column="applicationIdx"/>
        <result property="campaignId" column="campaignId"/>
        <result property="title" column="title"/>
        <result property="thumbnailUrl" column="thumbnailUrl"/>
        <result property="announceDate" column="announceDate"/>
        <result property="deadlineDate" column="deadlineDate"/>
    </resultMap>

    <select id="selectRunningCampaignsForReviewer"
      parameterType="java.lang.Integer"
      resultMap="runningCampaignResultMap">
        SELECT
        a.APPLICATION_IDX   AS applicationIdx,
        c.CAMPAIGN_IDX      AS campaignId,
        c.TITLE             AS title,
        c.THUMBNAIL_URL     AS thumbnailUrl,
        c.ANNOUNCE_DATE     AS announceDate,
        c.DEADLINE_DATE     AS deadlineDate
        FROM tb_campaign_application a
        JOIN tb_campaign c
        ON c.CAMPAIGN_IDX = a.CAMPAIGN_IDX
        WHERE a.MEMBER_IDX = #{memberIdx}
        AND a.APPLY_STATUS_CODE = 'CAMAPP_APPROVED'
        AND a.DEL_YN = 'N'
        AND c.DEL_YN = 'N'
        AND DATE(c.ANNOUNCE_DATE) <![CDATA[<=]]> CURDATE()
        ORDER BY c.ANNOUNCE_DATE DESC, c.DEADLINE_DATE ASC
    </select>

    <!-- 내 당첨 신청 1건 조회 -->
    <select id="findApprovedApplication" resultType="com.webcore.platform.reviewer.dto.ReviewerCancelDTO">
        SELECT
        APPLICATION_IDX AS applicationIdx,
        CAMPAIGN_IDX    AS campaignId,
        MEMBER_IDX      AS memberIdx,
        APPLY_STATUS_CODE AS type  <!-- 임시로 type에 매핑 (필요 없으면 빼도 됨) -->
        FROM tb_campaign_application
        WHERE MEMBER_IDX = #{memberIdx}
        AND CAMPAIGN_IDX = #{campaignId}
        AND APPLY_STATUS_CODE = 'CAMAPP_APPROVED'
        LIMIT 1
    </select>

    <!-- 상태 전환 -->
    <update id="updateToCanceled">
        UPDATE tb_campaign_application
        SET APPLY_STATUS_CODE = 'CAMAPP_CANCEL',
        MOD_DATE = NOW()
        WHERE APPLICATION_IDX = #{applicationIdx}
        AND MEMBER_IDX      = #{memberIdx}
        AND APPLY_STATUS_CODE = 'CAMAPP_APPROVED'
    </update>

    <!-- SIMPLE: penalty +1 -->
    <update id="increaseMemberPenalty">
        UPDATE tb_member
        SET penalty = penalty + 1,
        mod_date = NOW()
        WHERE member_idx = #{memberIdx}
    </update>

    <!-- 취소 로그 저장 -->
    <insert id="insertCancelReviewer" parameterType="com.webcore.platform.reviewer.dto.ReviewerCancelDTO">
        INSERT INTO tb_cancel_reviewer_list (
        application_idx, member_idx, type_code, reason, evidence_json, reg_date
        ) VALUES (
        #{applicationIdx}, #{memberIdx}, #{type}, #{reason}, #{evidenceJson}, NOW()
        )
    </insert>

    <!-- 리뷰어 프로필 수정 -->
    <update id="updateReviewerProfile" parameterType="com.webcore.platform.member.dto.MemberUpdateDTO">
        UPDATE tb_reviewer_profile
        SET NICKNAME = #{nickname},
        GENDER = #{gender},
        BIRTH_DATE = #{birthDate},
        ACTIVITY_AREA = #{activityArea},
        ACTIVITY_TOPIC = #{activityTopic},
        ZIP_CODE = #{zipCode},
        ADDRESS = #{address},
        DETAIL_ADDRESS = #{detailAddress}
        WHERE MEMBER_IDX = #{memberIdx}
    </update>

    <!-- 리뷰어 채널 등록/수정 (UPSERT) -->
    <insert id="upsertReviewerChannel" parameterType="com.webcore.platform.reviewer.dto.ReviewerChannelDTO">
        INSERT INTO tb_reviewer_channel (
        MEMBER_IDX,
        INF_TYPE_CODE_ID,
        CHANNEL_URL,
        REG_DATE
        )
        VALUES (
        #{memberIdx},
        #{infTypeCodeId},
        #{channelUrl},
        NOW()
        )
        ON DUPLICATE KEY UPDATE
        CHANNEL_URL = VALUES(CHANNEL_URL),
        MOD_DATE = NOW()
    </insert>
</mapper>